name: Build, Push, and Deploy Docker Image

on:
  push:
    branches:
      - master

jobs:
  check_changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine changed files
        id: changed-files
        run: |
          echo "Fetching changed files..."
          if git diff --name-only "${{ github.event.before }}" "${{ github.sha }}" | grep -E '^Dockerfile|^requirements.txt' > changed-files.txt; then
            cat changed-files.txt
            echo "Files have changed, proceeding with build."
            echo "build=true" >> $GITHUB_ENV
          else
            echo "No changes detected in Dockerfile or requirements.txt, skipping build."
            echo "build=false" >> $GITHUB_ENV
          fi

  build_and_push:
    runs-on: ubuntu-latest
    needs: check_changes
    if: env.build == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Build Docker image
        run: |
          docker build -t my-python-app:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          docker tag my-python-app:latest ${{ secrets.DOCKER_HUB_USERNAME }}/my-python-app:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my-python-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Pull Docker image from Docker Hub
        run: |
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/my-python-app:latest

      - name: Deploy to EC2
        uses: appleboy/ansible-action@v2
        with:
          playbook: deploy_docker_nginx.yml
          inventory: hosts
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'false'
          ANSIBLE_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }} 
